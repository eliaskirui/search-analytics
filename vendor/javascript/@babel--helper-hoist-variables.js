import*as e from"@babel/types";var t="default"in e?e.default:e;var i={};Object.defineProperty(i,"__esModule",{value:true});i.default=hoistVariables;var n=t;const{assignmentExpression:o,expressionStatement:a,identifier:r}=n;const s={Scope(e,t){"let"===t.kind&&e.skip()},FunctionParent(e){e.skip()},VariableDeclaration(e,t){if(t.kind&&e.node.kind!==t.kind)return;const i=[];const n=e.get("declarations");let s;for(const e of n){s=e.node.id;e.node.init&&i.push(a(o("=",e.node.id,e.node.init)));for(const i of Object.keys(e.getBindingIdentifiers()))t.emit(r(i),i,null!==e.node.init)}e.parentPath.isFor({left:e.node})?e.replaceWith(s):e.replaceWithMultiple(i)}};function hoistVariables(e,t,i="var"){e.traverse(s,{kind:i,emit:t})}const d=i.__esModule;export{d as __esModule,i as default};

